/**
 * accedeweb-tablist - WAI-ARIA tablist plugin based on AcceDe Web accessibility guidelines
 * @version v1.0.2
 * @link http://a11y.switch.paris/
 * @license ISC
 **/
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):t.Tablist=e()}(this,function(){"use strict";const t=["hide","show"];return class{constructor(t){if(!t||!t.nodeName)throw new Error("No DOM node provided. Abort.");this.el=t,this.tablist={},this.callbacks={},this._handleDisplay=this._handleDisplay.bind(this),this._handleFocus=this._handleFocus.bind(this),this._handleTab=this._handleTab.bind(this),this._handlePanelFocus=this._handlePanelFocus.bind(this),this._handlePanel=this._handlePanel.bind(this)}_firstActiveTab(){let t;for(let e=0;e<this.tablist.tabs.length;e++)if(!this.tablist.tabs[e].disabled){t=e;break}return t}_handleDisplay(t){t.preventDefault();const e=t.currentTarget;e.disabled||(e!==document.activeElement&&e.focus(),this._toggleDisplay(this.tablist.tabs.indexOf(e)))}_handleFocus(t){const e=t.currentTarget;e.disabled||(this.tablist.currentTabIndex=this.tablist.tabs.indexOf(e),this._select(this.tablist.tabs[this.tablist.currentTabIndex]))}_handlePanel(t){switch(void 0===this.tablist.currentTabIndex&&this._handlePanelFocus(t),t.keyCode){case 33:t.ctrlKey&&(t.preventDefault(),this._switchTab(this.tablist.currentTabIndex-1));break;case 34:t.ctrlKey&&(t.preventDefault(),this._switchTab(this.tablist.currentTabIndex+1));break;case 38:t.ctrlKey&&(t.preventDefault(),this._switchTab(this.tablist.currentTabIndex))}}_handlePanelFocus(t){if(t.target.doubleFocus)return t.preventDefault(),void delete t.target.doubleFocus;const e=t.currentTarget;this.tablist.currentTabIndex=this.tablist.tabPanels.indexOf(e),["radio","checkbox"].indexOf(t.target.type)>=0&&(t.target.doubleFocus=!0)}_handleTab(t){switch(void 0===this.tablist.currentTabIndex&&this._handleFocus(t),t.keyCode){case 32:case 13:this._handleDisplay(t);break;case 35:t.preventDefault(),this._switchTab(this.tablist.tabs.length-1);break;case 36:t.preventDefault(),this._switchTab(this._firstActiveTab());break;case 37:case 38:t.preventDefault(),this._switchTab(this.tablist.currentTabIndex-1);break;case 39:case 40:t.preventDefault(),this._switchTab(this.tablist.currentTabIndex+1)}}_noop(){}_select(t){this.tablist.tabs.forEach((e,s)=>{const i=t===e;e.setAttribute("aria-selected",i),e.setAttribute("tabindex",i?0:-1),i&&this._toggleDisplay(s)})}_switchTab(t){if(this.tablist.tabs[t]&&this.tablist.tabs[t].disabled){const e=t>this.tablist.currentTabIndex?t+1:t-1;this._switchTab(e)}else this.tablist.currentTabIndex=t,this.tablist.currentTabIndex<this._firstActiveTab()?this.tablist.currentTabIndex=this.tablist.tabsLength-1:this.tablist.currentTabIndex>=this.tablist.tabsLength&&(this.tablist.currentTabIndex=this._firstActiveTab()),this.tablist.tabs[this.tablist.currentTabIndex].focus()}_toggleDisplay(t,e=!0){if(e&&t===this.tablist.openedIndex)return;const s=this.tablist.tabs[t],i=this.tablist.tabPanels[t];e&&void 0!==this.tablist.openedIndex&&this._toggleDisplay(this.tablist.openedIndex,!1),s.setAttribute("aria-expanded",e),i.setAttribute("aria-hidden",!e),e?(this.tablist.openedIndex=t,void 0!==this.tablist.openedIndex&&this.trigger("show",[s,i])):void 0!==this.tablist.openedIndex&&this.trigger("hide",[s,i])}mount(){let t,e=!1;this.tablist.tabs=[],this.tablist.tabPanels=[],Array.prototype.slice.call(this.el.querySelectorAll("[role=tab]")).forEach((s,i)=>{const a=s.getAttribute("aria-controls");let n;if(a?n=document.getElementById(a):s.nextElementSibling&&s.nextElementSibling.getAttribute("aria-labelledby")===s.id&&(n=s.nextElementSibling),!n)throw new Error(`Could not find associated tabpanel for tab ${s.id}. Use [aria-controls="tabpanelId"] on the [role="tab"] element to link them together`);this.tablist.tabs.push(s),this.tablist.tabPanels.push(n),s.disabled=s.hasAttribute("disabled")||"true"===s.getAttribute("aria-disabled"),"true"!==s.getAttribute("data-expanded")||s.disabled||void 0===this.tablist.openedIndex&&(this._toggleDisplay(i,!0),e=!0),s.removeAttribute("data-expanded"),void 0!==t||s.disabled||(t=i),s.setAttribute("tabindex",-1),s.setAttribute("aria-expanded",e),n.setAttribute("aria-hidden",!e),s.addEventListener("click",this._handleDisplay),s.addEventListener("focus",this._handleFocus),s.addEventListener("keydown",this._handleTab),n.addEventListener("focus",this._handlePanelFocus),n.addEventListener("keydown",this._handlePanel)}),this.tablist.tabsLength=this.tablist.tabs.length,this.tablist.tabPanelsLength=this.tablist.tabPanels.length,void 0!==this.tablist.openedIndex?this.tablist.tabs[this.tablist.openedIndex].setAttribute("tabindex",0):(this._toggleDisplay(t,!0),this.tablist.tabs[t].setAttribute("tabindex",0))}off(t,e){if(!this.callbacks[t])return;const s=this.callbacks[t].indexOf(e);s<0||this.callbacks[t].splice(s,1)}on(e,s){t.indexOf(e)<0||(this.callbacks[e]||(this.callbacks[e]=[]),this.callbacks[e].push(s))}get openedTab(){return[this.tablist.tabs[this.tablist.openedIndex],this.tablist.tabPanels[this.tablist.openedIndex]]}trigger(t,e){this.callbacks[t]&&this.callbacks[t].forEach(t=>{t.apply(this,e)})}unmount(){this.tablist.tabs.forEach((t,e)=>{const s=this.tablist.tabPanels[e];t.removeEventListener("click",this._handleDisplay),t.removeEventListener("focus",this._handleFocus),t.removeEventListener("keydown",this._handleTab),t.removeAttribute("tabindex"),t.removeAttribute("aria-selected"),t.removeAttribute("aria-expanded"),s.removeEventListener("focus",this._handlePanelFocus),s.removeEventListener("keydown",this._handlePanel),s.setAttribute("aria-hidden","false")}),this.tablist={}}}});
